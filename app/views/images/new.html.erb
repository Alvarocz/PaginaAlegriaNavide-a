<section id="nueva-imagen">
  <div class="container form-container">
    <div class="row">
      <div class="col-xs-12">
        <h1>Subir imágen</h1>

        <% if @image.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@image.errors.count, "error") %> no permitieron que esta imágen se halla guardado:</h2>

            <ul>
            <% @image.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
            </ul>
          </div>
        <% end %>

        <%= form_for(@image, html: {id: "new-image-form"}) do |f| %>
          <div class="form-group">
            <%= f.label :title, 'Título' %>
            <%= f.text_field :title, placeholder: "Título de la imágen", class: "form-control" %>
          </div>
          <div class="form-group">
            <%= f.label :image, 'Archivo' %>
						<%= link_to("", "#", class: "upload_button") %>
            <%= f.cl_image_upload(:image, return_delete_token: true) %>
            <span>Requerido</span><br>
            <span class="status"></span>
          </div>
          <div class="success">
            <%= f.submit "Guardar", class: "btn btn-lg btn-success" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</section>

<!-- Configure Cloudinary jQuery plugin -->
<%= cloudinary_js_config %>

<script>
  $(document).ready(function() {
    $(".cloudinary-fileupload")
      .cloudinary_fileupload({
        // Uncomment the following lines to enable client side image resizing and valiation.
        // Make sure cloudinary/processing is included the js file
        //disableImageResize: false,
        //imageMaxWidth: 800,
        //imageMaxHeight: 600,
        //acceptFileTypes: /(\.|\/)(gif|jpe?g|png|bmp|ico)$/i,
        //maxFileSize: 20000000, // 20MB
        dropZone: "#direct_upload",
        start: function (e) {
          $(".status").text("Iniciando carga...");
        },
        progress: function (e, data) {
          $(".status").text("Cargando... " + Math.round((data.loaded * 100.0) / data.total) + "%");
        },
        fail: function (e, data) {
          $(".status").text("La carga falló");
        }
      })
      .off("cloudinarydone").on("cloudinarydone", function (e, data) {
        $("#photo_bytes").val(data.result.bytes);
        $(".status").text("");
        var preview = $(".preview").html('');
        $.cloudinary.image(data.result.public_id, {
          format: data.result.format, width: 50, height: 50, crop: "fit"
        }).appendTo(preview);

        $('<a/>').
          addClass('delete_by_token').
          attr({href: '#'}).
          data({delete_token: data.result.delete_token}).
          html('&times;').
          appendTo(preview).
          click(function(e) {
            e.preventDefault();
            $.cloudinary.delete_by_token($(this).data('delete_token')).done(function(){
              $('.preview').html('');
              $('#info').html('');
              $("#photo_bytes").val('');
              $('input[name="photo[image]"]').remove();
            }).fail(function() {
              $('.status').text("Cannot delete image");
          });
        });
      });
    });
</script>
